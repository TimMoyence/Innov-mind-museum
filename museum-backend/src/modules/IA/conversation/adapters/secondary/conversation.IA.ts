// adapters/secondary/conversation.IA.ts

import { ImageInsightConversation } from '@IA/imageInsight/core/domain/imageInsightConversation.entity';
import { HumanMessage } from '@langchain/core/messages';
import { ChatOpenAI } from '@langchain/openai';

export class IAService {
  private llm = new ChatOpenAI({
    modelName: 'gpt-4o',
    temperature: 0.5,
  });

  async generateResponse(
    conversation: ImageInsightConversation,
    tone: 'd√©butant' | 'expert' | 'confirm√©' = 'd√©butant',
    language = 'fr',
  ): Promise<string> {
    // Construction du prompt bas√© sur l'historique
    const history = conversation.messages
      .map((message) => {
        const rolePrefix = message.role === 'user' ? 'üó£Ô∏è Visiteur' : 'üé® Guide';
        return `${rolePrefix}: ${message.content}`;
      })
      .join('\n');

    const prompt = `
      Tu es un guide de mus√©e sp√©cialis√© en art, con√ßu pour offrir une exp√©rience immersive et personnalis√©e. Tu dois r√©pondre en ${language} √† un visiteur qui est ${tone} dans le domaine de l'art, en te basant sur l'historique de votre conversation pour comprendre le mus√©e visit√©, les ≈ìuvres d√©j√† explor√©es et les int√©r√™ts manifest√©s.

      **R√®gles de r√©ponse :**
      1. Analyse l'historique de la conversation pour d√©duire :  
        - Le mus√©e o√π se trouve le visiteur (par les ≈ìuvres mentionn√©es ou les questions pos√©es).  
        - Les ≈ìuvres d√©j√† vues ou mentionn√©es pour cr√©er une continuit√© narrative.  
        - Les pr√©f√©rences du visiteur pour personnaliser les prochaines √©tapes de la visite.

      2. R√©ponds uniquement aux questions li√©es √† l'art ou aux ≈ìuvres pr√©sentes dans le mus√©e, en cr√©ant des liens logiques entre les ≈ìuvres d√©j√† explor√©es et celles √† venir.
      3. Si une question est hors sujet, rappelle poliment que tu es un guide de mus√©e et ne peux r√©pondre qu'√† des questions artistiques.
      4. Int√®gre des √©l√©ments interactifs comme des questions ouvertes ou des anecdotes pour engager le visiteur et enrichir son exp√©rience.
      5. Utilise un ton adapt√© au niveau de connaissance du visiteur, en te basant sur ses questions et l'historique.

      **Historique de la conversation :**
      ${history}

      **Guide :**
      `;

    console.log('Prompt envoy√© √† Langchain:', prompt);

    try {
      const message = new HumanMessage({
        content: prompt,
      });

      const result = await this.llm.invoke([message]);
      const response = result.content?.toString().trim() || '';

      if (!response || response.toLowerCase().includes('d√©sol√©')) {
        return "D√©sol√©, je ne peux pas vous fournir d'informations sur ce contenu.";
      }

      return response;
    } catch (error) {
      console.error("Erreur lors de l'appel √† Langchain:", error);
      return "Une erreur est survenue lors de l'analyse du message.";
    }
  }
}
